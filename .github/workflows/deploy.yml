      - name: Deploy to Digital Ocean Droplet
        env:
          DROPLET_IP: ${{ secrets.DROPLET_IP }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: |
          # Debug SSH Key
          echo "SSH_PRIVATE_KEY length: ${#SSH_PRIVATE_KEY}"

          # Setup SSH
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Add the Droplet's IP to known_hosts
          ssh-keyscan -H "$DROPLET_IP" >> ~/.ssh/known_hosts

          # Test SSH connection
          ssh -T -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@"$DROPLET_IP" "echo 'SSH connection successful!'"

          # Copy docker-compose.yml to the remote server
          scp -i ~/.ssh/id_rsa docker-compose.yml root@"$DROPLET_IP":/root/

          # SSH into droplet and deploy
          ssh -T -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@"$DROPLET_IP" << 'EOF'
          set -e
          cd /root

          # Install Docker
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

          # Install Docker Compose
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

          # Verify Docker and Docker Compose installation
          docker --version
          docker-compose --version

          # Create .env file
          echo "MYSQL_ROOT_PASSWORD='${MYSQL_ROOT_PASSWORD}'" > .env
          echo "NGROK_AUTH_TOKEN='${NGROK_AUTH_TOKEN}'" >> .env

          # Deploy containers
          docker-compose pull
          docker-compose down
          docker-compose up -d

          # Ensure jq is installed
          apt-get update && apt-get install -y jq

          # Wait for ngrok to start and print the URL
          sleep 10
          echo "Ngrok URLs:"
          curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[].public_url'
          EOF